// <auto-generated />
using System;
using AuctionCar.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuctionCar.Migrations
{
    [DbContext(typeof(AuctionCarContext))]
    [Migration("20240802142153_CreateLotTable")]
    partial class CreateLotTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.6.24327.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuctionCar.Models.Auction.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("AuctionCar.Models.Auction.AuctionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuctionStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Inactive"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Suspended"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Closed"
                        },
                        new
                        {
                            Id = 5,
                            Status = "Removed"
                        });
                });

            modelBuilder.Entity("AuctionCar.Models.Lot.Lot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OriginalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("AuctionCar.Models.Lot.LotStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LotStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Closed"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Upcoming"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Removed"
                        },
                        new
                        {
                            Id = 5,
                            Status = "PendingApproval"
                        });
                });

            modelBuilder.Entity("AuctionCar.Models.Lot.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LotId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("AuctionCar.Models.Users.Buyer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResetPasswordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SaltPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("AuctionCar.Models.Auction.Auction", b =>
                {
                    b.HasOne("AuctionCar.Models.Auction.AuctionStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AuctionCar.Models.Lot.Lot", b =>
                {
                    b.HasOne("AuctionCar.Models.Auction.Auction", "Auction")
                        .WithMany("Lots")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("AuctionCar.Models.Lot.Vehicle", b =>
                {
                    b.HasOne("AuctionCar.Models.Lot.Lot", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("LotId");
                });

            modelBuilder.Entity("AuctionCar.Models.Auction.Auction", b =>
                {
                    b.Navigation("Lots");
                });

            modelBuilder.Entity("AuctionCar.Models.Lot.Lot", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
